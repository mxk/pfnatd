[package]
name = "pfnatd"
version = "0.1.0"
authors = ["Maxim Khitrov <max@mxcrypt.com>"]
edition = "2024"
description = "Easy NAT mode for OpenBSD packet filter"
repository = "https://github.com/mxk/pfnatd"
license = "MPL-2.0"
keywords = ["openbsd", "pf", "nat", "firewall", "stun"]
categories = ["command-line-utilities", "network-programming", "os", "security"]

[build-dependencies]
bindgen = "0.72.1"

[dependencies]
anyhow = "1.0.100"
env_logger = "0.11.8"
log = "0.4.28"
signal-hook = "0.3.18"

# Rust v1.90.0
[lints.rust]
ambiguous_negative_literals = "warn"
closure_returning_async_block = "warn"
deref_into_dyn_supertrait = "warn"
elided_lifetimes_in_paths = "warn"
explicit_outlives_requirements = "warn"
ffi_unwind_calls = "warn"
# fuzzy_provenance_casts = "warn"
impl_trait_redundant_captures = "warn"
let_underscore_drop = "warn"
linker_messages = "warn"
# lossy_provenance_casts = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
missing_unsafe_on_extern = "warn"
# must_not_suspend = "warn"
non_ascii_idents = "warn"
redundant_imports = "warn"
redundant_lifetimes = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
# unqualified_local_imports = "warn"
unsafe_attr_outside_unsafe = "warn"
unused_crate_dependencies = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

# Clippy v1.90.0
[lints.clippy]
cargo = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
inline_always = "allow"
wildcard_imports = "allow"
restriction = { level = "allow", priority = -1 }
alloc_instead_of_core = "warn"
allow_attributes = "warn"
as_pointer_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_union_representation = "warn"
deref_by_slicing = "warn"
doc_include_without_cfg = "warn"
empty_drop = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
exit = "warn"
filetype_is_file = "warn"
fn_to_numeric_cast_any = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
infinite_loop = "warn"
integer_division_remainder_used = "warn"
let_underscore_must_use = "warn"
lossy_float_literal = "warn"
map_with_unused_argument_over_ranges = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
multiple_inherent_impl = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
needless_raw_strings = "warn"
non_zero_suggestions = "warn"
pathbuf_init_then_push = "warn"
pattern_type_mismatch = "warn"
precedence_bits = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_test_prefix = "warn"
redundant_type_annotations = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
same_name_method = "warn"
semicolon_outside_block = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
verbose_file_reads = "warn"
suspicious = { level = "deny", priority = -1 }
